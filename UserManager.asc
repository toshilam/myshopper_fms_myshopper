function UserManager()
{
	//this.acceptedUser = application.arrAcceptedUser;
}

UserManager.prototype.getUserObjByShopID = function(inShopID)
{
	//a list of connected user
	var arrUser = application.arrUser;
	//an array storing user object which current walked in the indecated shop id
	var arrMatchedUser = new Array();
	
	for(i in arrUser)
	{
		var userObj = arrUser[i].userObj;
		
		if(userObj)
		{
			var shopID = userObj.s_id;
		
			if(shopID)
			{
				if(inShopID == shopID)
				{
					arrMatchedUser.push(arrUser[i]);
				}
			}
			else
			{
				trace('UserManager : getUserObjByShopID : unable to retrieve shop id in this user : ' + userObj.id);
			}
		}
		else
		{
			trace('UserManager : getUserObjByShopID : unable to retrieve user object : ' + i);
		}
	}
	
	return arrMatchedUser;
}

/*UserManager.prototype.getUserObjectByUID = function(inUID)
{
	var numUser = application.arrAcceptedUser.length;
	
	for(var i = 0; i<numUser; i++)
	{
		if(application.arrAcceptedUser[i].userObj.u_id == inUID)
		{
			return application.arrAcceptedUser[i].userObj;
		}
	}
	
	return null;
}*/

/*UserManager.prototype.updateUserLatlng = function(inData)
{
	if(inData.u_lat && inData.u_lng)
	{
		var userObj = this.getUserObjectByUID(inData.u_id);
		if(userObj)
		{
			userObj.u_lat = inData.u_lat;
			userObj.u_lng = inData.u_lng;
			
			//send updated user obj to all logged user
			application.sendBroadcastMsg(new FMSReplyVO(application.remoteService.FMSServiceType.updateLatLng, application.remoteService.FMSErrorCode.none, userObj));
			
			return true;
		}
		else
		{
			trace('UserManager : updateUserLatlng : no user found : ' + inData.service);
			return false;
		}
	}
	
	trace('UserManager : updateUserLatlng : no data provide : ' + inData.service);
	return false;
}*/

/**
add friend request
inValue - 	friendUID : the target use want to be added, 
			uid : 		the user id who made this request, 
			message :	from request user
*/
/*UserManager.prototype.addFriendRequest = function(inData)
{
	if(inData.uid && inData.friendUID)
	{
		var targetUserObj = this.getUserObjectByUID(inData.friendUID);
		if(targetUserObj)
		{
			targetUserObj.call
			(
				application.remoteService.userMethodName, 
				null, 
				new FMSReplyVO
				(
					application.remoteService.FMSServiceType.addFriendRequest, 
					application.remoteService.FMSErrorCode.none, 
					{ friendUID:inData.uid, message:inData.message } //swap uid to friend uid, as in friend side uid == friend id
				)
			);
			return true;
		}
		else
		{
			trace('UserManager : addFriendRequest : no user object found!');
		}
	}
	
	return false;
}*/

/**
add friend response
inValue - 	friendUID : the request maker uid, 
			uid : 		response uid, 
			isAccept :	is request accepted
*/
/*UserManager.prototype.addFriendResponse = function(inData)
{
	//if request accepted, save data into db
	if(inData.isAccept)
	{
		if(inData.uid && inData.friendUID)
		{
			application.remoteService.call( { service:application.remoteService.AMFServiceType.addFriend, uid:inData.uid, friendUID:inData.friendUID } );
		}
		else
		{
			trace('UserManager : addFriendResponse : no data found!');
		}
	}
	else
	{
		//clear saved data?
	}
	
	return false;
}*/

application.registerClass("UserManager", UserManager);